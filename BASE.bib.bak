@InProceedings{wat13,
  author    = {A. Waterman and Y. Lee and R. Avizienis and H. Cook and D. Patterson and K. Asanovic},
  booktitle = {Proc. IEEE Hot Chips 25 Symp. (HCS)},
  title     = {The {RISC}-V instruction set},
  year      = {2013},
  month     = aug,
  pages     = {1},
  comment   = {pr@ARTICLE{8634812, 
author={C. {Celio} and P. {Chiu} and K. {Asanović} and B. {Nikolić} and D. {Patterson}}, 
journal={IEEE Micro}, 
title={BROOM: An Open-Source Out-of-Order Processor With Resilient Low-Voltage Operation in 28-nm CMOS}, 
year={2019}, 
volume={39}, 
number={2}, 
pages={52-60}, 
keywords={Open source software;Random access memory;Design methodology;CMOS process;Generators;Voltage control;Agile software development}, 
doi={10.1109/MM.2019.2897782}, 
ISSN={0272-1732}, 
month={March},}eenchimento da ficha de leitura.....},
  doi       = {10.1109/HOTCHIPS.2013.7478332},
  groups    = {elvim:6},
  keywords  = {instruction sets, microprocessor chips, reduced instruction set computing, RISC-V instruction set, Instruction sets, Microarchitecture, Pipelines},
}

@Article{8643783,
  author   = {P. {Chiu} and C. {Celio} and K. {Asanović} and B. {Nikolić} and D. {Patterson}},
  title    = {Cache Resiliency Techniques for a Low-Voltage RISC-V Out-of-Order Processor in 28 nm CMOS},
  journal  = {IEEE Solid-State Circuits Letters},
  year     = {2019},
  pages    = {1-1},
  issn     = {2573-9603},
  doi      = {10.1109/LSSC.2019.2900148},
  file     = {:C\:/Users/elvim/Downloads/25-02-2019BRUNO OTAVIO RAMOS.pdf:PDF},
  keywords = {Circuit faults;Random access memory;Maintenance engineering;Resilience;Recycling;Metadata;Low voltage;RISC-V;open-source processor;out-of-order processor;cache resiliency.},
}

@Book{Hennessy2012,
  author    = {Hennessy, John L. and Patterson, David A.},
  publisher = {Morgan Kaufmann},
  title     = {Computer Architecture: A Quantitative Approach},
  year      = {2012},
  address   = {Amsterdam},
  edition   = {5},
  isbn      = {978-0-12-383872-8},
  abstract  = {The computing world today is in the middle of a revolution: mobile clients and cloud computing have emerged as the dominant paradigms driving programming and hardware innovation today. The Fifth Edition of Computer Architecture focuses on this dramatic shift, exploring the ways in which software and technology in the 'cloud' are accessed by cell phones, tablets, laptops, and other mobile computing devices. Each chapter includes two real-world examples, one mobile and one datacenter, to illustrate this revolutionary change.},
  added-at  = {2016-11-04T19:12:58.000+0100},
  biburl    = {https://www.bibsonomy.org/bibtex/2d2d024a4ec1fd887aa36482288ca38f9/flint63},
  file      = {ACM Learning Center eBook:2012/HennessyPatterson12.pdf:PDF;Amazon Search inside:http\://www.amazon.de/gp/reader/012383872X/:URL},
  groups    = {public},
  interhash = {83342075ee6946a3cd5ffa87f2337a87},
  intrahash = {d2d024a4ec1fd887aa36482288ca38f9},
  keywords  = {01624 103 book acm elsevier computer architecture mobile device cloud intro},
  ranking   = {rank5},
  timestamp = {2017-07-13T18:01:10.000+0200},
  username  = {flint63},
}

@Article{Huixian2020,
  author  = {Huixian, Jiang},
  journal = {IEEE Access},
  title   = {The Analysis of Plants Image Recognition Based on Deep Learning and Artificial Neural Network},
  year    = {2020},
  pages   = {68828-68841},
  volume  = {8},
  comment = {ksjdksadjlksad asdklasjdksajlkasjlksajdlksj},
  doi     = {10.1109/ACCESS.2020.2986946},
}

@Article{Zbontar2016,
  author    = {Jure Žbontar and Yann LeCun},
  title     = {Stereo matching by training a convolutional neural network to compare image patches},
  year      = {2016},
  month     = {1},
  pages     = {2287–2318},
  abstract  = {We present a method for extracting depth information from a rectified image pair. Our approach focuses on the first stage of many stereo algorithms: the matching cost computation. We approach the problem by learning a similarity measure on small image patches using a convolutional neural network. Training is carried out in a supervised manner by constructing a binary classification data set with examples of similar and dissimilar pairs of patches. We examine two network architectures for this task: one tuned for speed, the other for accuracy. The output of the convolutional neural network is used to initialize the stereo matching cost. A series of post-processing steps follow: cross-based cost aggregation, semiglobal matching, a left-right consistency check, subpixel enhancement, a median filter, and a bilateral filter. We evaluate our method on the KITTI 2012, KITTI 2015, and Middlebury stereo data sets and show that it outperforms other approaches on all three data sets.},
  booktitle = {J. Mach. Learn. Res.},
  day       = {1},
  keywords  = {convolutional neural networks, matching cost, similarity learning, stereo, supervised learning},
  pagetotal = {32},
  publisher = {JMLR.org},
}

@Article{Szlam2010,
  author        = {Arthur Szlam and Koray Kavukcuoglu and Yann LeCun},
  title         = {Convolutional Matching Pursuit and Dictionary Training},
  year          = {2010},
  month         = oct,
  abstract      = {Matching pursuit and K-SVD is demonstrated in the translation invariant setting},
  archiveprefix = {arXiv},
  eprint        = {1010.0422},
  file          = {:Szlam2010 - Convolutional Matching Pursuit and Dictionary Training.pdf:PDF},
  keywords      = {cs.CV},
  primaryclass  = {cs.CV},
}

@book{haykinredes,
	title={Redes Neurais: Princ{\'\i}pios e Pr{\'a}tica},
	author={Haykin, S.},
	publisher={Bookman Editora},
	address={São Paulo},
	year={2001}
}

@Article{LeCun1990,
  author  = {LeCun, Yann and Denker, J and Henderson, D and Howard, R and Hubbard, W and Jacke, L},
  journal = {Advances in neural information processing systems},
  title   = {Imagenet classification with deep convolutional neural networks},
  year    = {1990},
}

@Article{Staff2018@inproceedings{10.1145/1852666.1852695,author = {Parham, James D. and McDonald, J. Todd and Grimaila, Michael R. and Kim, Yong C.},title = {A Java Based Component Identification Tool for Measuring the Strength of Circuit Protections},year = {2010},isbn = {9781450300179},publisher = {Association for Computing Machinery},address = {New York, NY, USA},url = {https://doi.org/10.1145/1852666.1852695},doi = {10.1145/1852666.1852695},abstract = {Protecting circuitry from reverse engineering is extremely important for the protection of intellectual property and critical technologies. A failure to adequately mitigate reverse engineering risks can result in significant consequences. In commercial environments, the consequences include loss of revenue resulting from the removal of content access restrictions, creation of unlicensed copies of a circuit, and intellectual property theft. In military environments, consequences include an adversary's ability to gain valuable knowledge about the structure, function, and operation of the system enabling them to develop countermeasures to defeat or corrupt the system's intended purpose. When critical systems are compromised, organizations may be required to spend millions of dollars and countless labor hours making changes in the system and redesigning new protection circuitry. While there are multiple protection algorithms and schemes which claim to provide protection against reverse engineering, little research exists on developing methods to measure the effectiveness of protections.Component identification is an essential step of the reverse engineering process of circuits which are increasingly being embedded in modern systems. The task of component identification is not trivial and requires significant effort even for relatively small circuits. For this reason, computer tools are often employed to make the analysis of larger circuits possible. In this paper, we discuss the development and implementation of a Java based tool that can be used to identify components in combinational circuits. The use of a component identification tool provides metrics that can be used to differentially evaluate the "strength" of protections within circuits. We introduce the foundational candidate enumeration algorithm, explain the additional techniques required for identifying components in large Boolean circuits, and demonstrate the utility of the method through the analysis of multiple combinational circuits.},booktitle = {Proceedings of the Sixth Annual Workshop on Cyber Security and Information Intelligence Research},articleno = {26},numpages = {4},keywords = {reverse engineering, circuit protection, component identification},location = {Oak Ridge, Tennessee, USA},series = {CSIIRW '10}},
  author     = {CACM Staff},
  journal    = {Commun. ACM},
  title      = {Hennessy and Patterson on the Roots of RISC},
  year       = {2018},
  issn       = {0001-0782},
  month      = {sep},
  number     = {10},
  pages      = {6–7},
  volume     = {61},
  address    = {New York, NY, USA},
  doi        = {10.1145/3273019},
  issue_date = {October 2018},
  numpages   = {2},
  publisher  = {Association for Computing Machinery},
  url        = {https://doi.org/10.1145/3273019},
}

@InProceedings{Parham2010,
  author    = {Parham, James D. and McDonald, J. Todd and Grimaila, Michael R. and Kim, Yong C.},
  booktitle = {Proceedings of the Sixth Annual Workshop on Cyber Security and Information Intelligence Research},
  title     = {A Java Based Component Identification Tool for Measuring the Strength of Circuit Protections},
  year      = {2010},
  address   = {New York, NY, USA},
  publisher = {Association for Computing Machinery},
  series    = {CSIIRW '10},
  abstract  = {Protecting circuitry from reverse engineering is extremely important for the protection of intellectual property and critical technologies. A failure to adequately mitigate reverse engineering risks can result in significant consequences. In commercial environments, the consequences include loss of revenue resulting from the removal of content access restrictions, creation of unlicensed copies of a circuit, and intellectual property theft. In military environments, consequences include an adversary's ability to gain valuable knowledge about the structure, function, and operation of the system enabling them to develop countermeasures to defeat or corrupt the system's intended purpose. When critical systems are compromised, organizations may be required to spend millions of dollars and countless labor hours making changes in the system and redesigning new protection circuitry. While there are multiple protection algorithms and schemes which claim to provide protection against reverse engineering, little research exists on developing methods to measure the effectiveness of protections.Component identification is an essential step of the reverse engineering process of circuits which are increasingly being embedded in modern systems. The task of component identification is not trivial and requires significant effort even for relatively small circuits. For this reason, computer tools are often employed to make the analysis of larger circuits possible. In this paper, we discuss the development and implementation of a Java based tool that can be used to identify components in combinational circuits. The use of a component identification tool provides metrics that can be used to differentially evaluate the "strength" of protections within circuits. We introduce the foundational candidate enumeration algorithm, explain the additional techniques required for identifying components in large Boolean circuits, and demonstrate the utility of the method through the analysis of multiple combinational circuits.},
  articleno = {26},
  doi       = {10.1145/1852666.1852695},
  isbn      = {9781450300179},
  keywords  = {reverse engineering, circuit protection, component identification},
  location  = {Oak Ridge, Tennessee, USA},
  numpages  = {4},
  url       = {https://doi.org/10.1145/1852666.1852695},
}

@Comment{jabref-meta: databaseType:bibtex;}

@Comment{jabref-meta: grouping:
0 AllEntriesGroup:;
1 StaticGroup:Markings\;2\;0\;\;\;\;;
2 StaticGroup:[elvim:]\;2\;1\;\;\;\;;
2 StaticGroup:elvim:6\;2\;1\;\;\;\;;
}
